testrun_results_generator:
  defaults:
    split: yes
    round: 6
    fillna: "NaN"
  columns:
    - name: CaseID
      method: batch_query_datastore
      format: "%s-%s-%s-%sB-%si"
      jqexpr:
        - ".iteration_data.parameters.benchmark[].benchmark_name"
        - ".iteration_data.parameters.benchmark[].protocol"
        - ".iteration_data.parameters.benchmark[].test_type"
        - ".iteration_data.parameters.benchmark[].message_size_bytes"
        - ".iteration_data.parameters.benchmark[].instances"
    - name: Protocol
      method: query_datastore
      jqexpr: ".iteration_data.parameters.benchmark[].protocol"
    - name: TestType
      method: query_datastore
      jqexpr: ".iteration_data.parameters.benchmark[].test_type"
    - name: MSize
      method: query_datastore
      jqexpr: ".iteration_data.parameters.benchmark[].message_size_bytes"
    - name: Instance
      method: query_datastore
      jqexpr: ".iteration_data.parameters.benchmark[].instances"
    - name: Sample
      method: get_sample
    - name: Throughput
      method: query_datastore
      jqexpr: '.iteration_data.throughput.Gb_sec[] | select(.client_hostname=="all") | .samples[].value'
      unit: Mb/s
      factor: 1024
      round: 3
    - name: Trans
      method: query_datastore
      jqexpr: '.iteration_data.throughput.trans_sec[] | select(.client_hostname=="all") | .samples[].value'
      unit: t/s
      round: 1
    - name: Latency
      method: query_datastore
      jqexpr: '.iteration_data.latency.usec[] | select(.client_hostname=="all") | .samples[].value'
      unit: us
      factor: 1
      round: 1
    - name: Path
      method: get_source_url
    - name: timeseries_throughput_Gb_sec
      method: query_datastore
      jqexpr: '.iteration_data.throughput.Gb_sec[] | select(.client_hostname=="all") | .samples[].timeseries'
    - name: timeseries_throughput_trans_sec
      method: query_datastore
      jqexpr: '.iteration_data.throughput.trans_sec[] | select(.client_hostname=="all") | .samples[].timeseries'
    - name: timeseries_latency_usec
      method: query_datastore
      jqexpr: '.iteration_data.latency.usec[] | select(.client_hostname=="all") | .samples[].timeseries'