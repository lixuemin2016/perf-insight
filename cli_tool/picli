#!/usr/bin/env python3

"""
PiCLI - the CLI tool for perf-insight server.

Read this for more details on Click Context:
https://click.palletsprojects.com/en/8.0.x/commands/
"""

import click
import requests
import json


@click.group()
@click.option('--debug/--no-debug', default=False)
@click.option('--api-server')
@click.pass_context
def cli(ctx, debug, api_server):
    ctx.ensure_object(dict)
    ctx.obj['DEBUG'] = debug
    if api_server:
        ctx.obj['API_SERVER'] = api_server


@cli.command()
@click.pass_context
def testrun_list(ctx):
    """List all TestRuns."""

    request_url = 'http://{}/testruns'.format(ctx.obj['API_SERVER'])

    try:
        response = requests.get(url=request_url)

        response.raise_for_status()
        result = response.json()

        # Successful request
        click.echo('{}'.format(json.dumps(result, indent=4)))

        # for testrun in result.get('testruns', {}):
        #     click.echo('{}'.format(testrun['id']))

    except requests.exceptions.RequestException as ex:
        # Try to get more details
        try:
            details = response.json()
        except:
            details = None

        # Failed request
        click.echo('{}'.format(ex))
        if details:
            click.echo('{}'.format(details))

@cli.command()
@click.option('--testrun-id', required=True, prompt='TestRun ID',
              help='The TestRun to be inspected.')
@click.pass_context
def testrun_inspect(ctx, testrun_id):
    """Inspect specified TestRun."""

    request_url = 'http://{}/testruns/{}'.format(
        ctx.obj['API_SERVER'], testrun_id)

    try:
        response = requests.get(url=request_url)

        response.raise_for_status()
        result = response.json()

        # Successful request
        click.echo('{}'.format(json.dumps(result, indent=4)))

    except requests.exceptions.RequestException as ex:
        # Try to get more details
        try:
            details = response.json()
        except:
            details = None

        # Failed request
        click.echo('{}'.format(ex))
        if details:
            click.echo('{}'.format(details))


@cli.command()
@click.pass_context
def testrun_load(ctx):
    """testrun_load."""
    click.echo(f"Debug is {'on' if ctx.obj['DEBUG'] else 'off'}")


@cli.command()
@click.pass_context
def testrun_import(ctx):
    """testrun_import."""
    click.echo(f"Debug is {'on' if ctx.obj['DEBUG'] else 'off'}")


@cli.command()
@click.pass_context
def testrun_fetch(ctx):
    """testrun_fetch."""
    click.echo(f"Debug is {'on' if ctx.obj['DEBUG'] else 'off'}")


@cli.command()
@click.pass_context
def testrun_delete(ctx):
    """testrun_delete."""
    click.echo(f"Debug is {'on' if ctx.obj['DEBUG'] else 'off'}")


if __name__ == '__main__':
    cli(obj={'API_SERVER': 'localhost:5001'})
